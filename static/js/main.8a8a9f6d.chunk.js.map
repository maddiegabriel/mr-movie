{"version":3,"sources":["components/logo.png","components/Header.js","components/Search.js","components/NominationListContext.js","components/BannerContext.js","components/MovieCard.js","components/SearchResults.js","components/NomineeCard.js","components/sad.png","components/Nominations.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","classes","makeStyles","head","minHeight","width","backgroundColor","logo","maxWidth","top","position","left","transform","useStyles","className","src","Logo","alt","Search","props","useState","searchTerm","setSearchTerm","theme","form","padding","display","marginTop","input","marginLeft","spacing","flex","fontSize","iconButton","Paper","component","InputBase","placeholder","inputProps","value","onChange","e","target","search","IconButton","type","aria-label","onClick","preventDefault","React","createContext","Provider","Consumer","NominationListContextProvider","state","nominationList","setNominationList","newList","setState","prevState","this","children","Component","BannerContextProvider","banners","setBanners","full","error","MovieCard","root","boxShadow","details","flexDirection","content","image","button","buttonState","nCtx","imdbID","i","length","JSON","parse","imdb","nomContext","bannerContext","Card","CardContent","Typography","variant","title","color","year","Button","size","startIcon","disabled","bCtx","poster","newNomination","nomsList","push","stringify","buildNomination","CardMedia","SearchResults","card","marginBottom","results","height","overflow","paddingLeft","result","errorText","textAlign","CardHeader","List","movies","map","movie","index","ListItem","Title","Year","Poster","NomineeCard","context","idToRemove","removeNomination","Nominations","nominations","sadOscar","minWidth","marginRight","sadOscarText","formatList","ctxNoms","SadOscar","initialState","errorMessage","reducer","action","payload","App","useReducer","dispatch","fetch","then","response","json","jsonResponse","Response","Error","divider","Alert","severity","Grid","container","item","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a8a9f6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.698e2c2a.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Logo from \"./logo.png\";\n\nconst Header = () => {\n\n  const useStyles = makeStyles(() => ({\n    head: {\n      minHeight: '46vh',\n      width: '100%',\n      backgroundColor: '#cae6ef',\n    },\n    logo: {\n      maxWidth: '65vh',\n      top: '18vh',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translate(-50%, -50%)', \n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.head}>\n      <img src={Logo} alt=\"website logo\" className={classes.logo} />\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Search = (props) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const handleSearchInput = (e) => {\n    setSearchTerm(e.target.value);\n    props.search(searchTerm);\n  }\n\n  const submitSearch = (e) => {\n    e.preventDefault();\n    props.search(searchTerm);\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    form: {\n      padding: '10px 4px',\n      display: 'flex',\n      width: '70%',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      marginTop: '-70px',\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n      fontSize: '1.3rem',\n    },\n    iconButton: {\n      padding: 10,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n      <Paper component=\"form\" className={classes.form}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search for your favourite movie!\"\n          inputProps={{ 'aria-label': 'search omdb' }}\n          value={searchTerm}\n          onChange={handleSearchInput}\n        />\n        <IconButton\n          type=\"submit\"\n          className={classes.iconButton}\n          aria-label=\"search\"\n          onClick={submitSearch}\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    );\n}\n\nexport default Search;","import React, { Component } from \"react\";\nconst { Provider, Consumer } = React.createContext();\n\nclass NominationListContextProvider extends Component {\n  state = {\n    nominationList: [],\n  };\n\n  setNominationList = (newList) => {\n    // could update localStorage here for persistence  \n    this.setState(prevState => {\n      return {\n        nominationList: newList\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Provider value={{ nominationList: this.state.nominationList, setNominationList: this.setNominationList }} >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { NominationListContextProvider, Consumer as NominationListContextConsumer };","import React, { Component } from \"react\";\nconst { Provider, Consumer } = React.createContext();\n\nclass BannerContextProvider extends Component {\n\n  state = {\n    banners: [false, false],\n  };\n\n  setBanners = (full, error) => {\n    this.setState(prevState => {\n      return {\n        banners: [\n            full,\n            error\n        ]\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Provider value={{ banners: this.state.banners, setBanners: this.setBanners }} >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { BannerContextProvider, Consumer as BannerContextConsumer };","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport Button from '@material-ui/core/Button';\nimport { NominationListContextConsumer } from \"./NominationListContext\";\nimport { BannerContextConsumer } from \"./BannerContext\";\n\nconst MovieCard = (props) => {\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      display: 'flex',\n      width: '100%',\n      boxShadow: '2px 4px 6px 4px #ccc',\n    },\n    details: {\n      width: '70%',\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '30vh',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    image: {\n      width: '30%',\n    },\n    button: {\n      marginTop: '30px',\n      backgroundColor: '#96BF48',\n      '&:hover': {\n        backgroundColor: '#5E8E3E',\n      }\n    },\n  }));\n\n  const classes = useStyles();\n\n  const buildNomination = (nCtx, bCtx, imdbID, title, year, poster) => {\n    // Set the notification banners\n    if(nCtx.nominationList.length === 5) {\n      bCtx.setBanners(false, true);\n      return;\n    } else if(nCtx.nominationList.length === 4) {\n      bCtx.setBanners(true, false);\n    }\n\n    // Add new movie to NominationListContext state\n    let newNomination = {\n      imdb: imdbID,\n      title: title,\n      year: year,\n      poster: poster\n    };\n\n    let nomsList = [];  \n    for(let i=0; i < nCtx.nominationList.length; i++) {\n      nomsList.push(nCtx.nominationList[i]);\n    }\n    nomsList.push(JSON.stringify(newNomination));\n    nCtx.setNominationList(nomsList);\n  }\n\n  const buttonState = (nCtx, imdbID) => {\n    for(let i=0; i < nCtx.nominationList.length; i++) {\n      if(JSON.parse(nCtx.nominationList[i]).imdb === imdbID) {\n        return true; // disable nominate button\n      }\n    }\n    return false;\n  }\n\n  return (\n    <NominationListContextConsumer>\n      {nomContext => (\n        <BannerContextConsumer>\n          {bannerContext => (\n            <Card className={classes.root}>\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <Typography component=\"h5\" variant=\"h5\">{props.title}</Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">{props.year}</Typography>\n                  <Button\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<StarsIcon />}\n                    disabled={buttonState(nomContext, props.imdb)}\n                    onClick={() => buildNomination(nomContext, bannerContext, props.imdb, props.title, props.year, props.poster)}\n                  >\n                    Nominate\n                  </Button>\n                </CardContent>\n              </div>\n              <CardMedia\n                className={classes.image}\n                image={props.poster}\n                title=\"Movie poster\"\n              />\n            </Card>\n          )}\n        </BannerContextConsumer>\n      )}\n    </NominationListContextConsumer>\n  );\n}\n\nexport default MovieCard;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport MovieCard from \"./MovieCard\";\nimport Typography from '@material-ui/core/Typography';\n\nconst SearchResults = (props) => {\n\n  const useStyles = makeStyles(() => ({\n    card: {\n      padding: '10px 4px',\n      boxShadow: '2px 4px 6px 4px #ccc',\n      marginBottom: '6%',\n    },\n    title: {\n      position: 'sticky',\n    },\n    results: {\n      height: '45vh',\n      overflow: 'scroll',\n      paddingLeft: '0',\n    },\n    result: {\n      paddingLeft: '2px',\n    },\n    errorText: {\n      textAlign: 'center',\n      marginTop: '20%',\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader className={classes.title} title=\"Movie Search Results\" />\n      <CardContent>\n        <List className={classes.results}>\n          { // Conditional rendering based on if movie results exist\n                (props.movies === null)\n                  ? <div>\n                      <div className={classes.errorText}>\n                        <Typography component=\"h5\" variant=\"h5\">Hmmm... no results!</Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">Try a more specific search.</Typography>\n                      </div>\n                    </div>\n                  : props.movies.map((movie, index) => (\n                      <ListItem key={index} className={classes.result}>\n                        <MovieCard key={index} imdb={movie.imdbID} title={movie.Title} year={movie.Year} poster={movie.Poster} />\n                      </ListItem>\n                    ))\n              }\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Button from '@material-ui/core/Button';\nimport { NominationListContextConsumer } from \"./NominationListContext\";\nimport { BannerContextConsumer } from \"./BannerContext\";\n\nconst NomineeCard = (props) => {\n\n  const removeNomination = (nCtx, bCtx, idToRemove) => {\n    let newList = [];\n    for(let i=0; i < nCtx.nominationList.length; i++) {\n      if(JSON.parse(nCtx.nominationList[i]).imdb != idToRemove) {\n        newList.push(nCtx.nominationList[i]);\n      }\n    }\n    nCtx.setNominationList(newList);\n    bCtx.setBanners(false, false);\n  }\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      display: 'flex',\n      width: '100%',\n      boxShadow: '2px 4px 6px 4px #ccc',\n    },\n    details: {\n      width: '70%',\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '30vh',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    image: {\n      width: '30%',\n    },\n    button: {\n      marginTop: '30px',\n      backgroundColor: '#D71C21',\n      '&:hover': {\n        backgroundColor: '#880C15',\n      }\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <NominationListContextConsumer>\n      {context => (\n        <BannerContextConsumer>\n          {bannerContext => (\n            <Card className={classes.root}>\n              <div className={classes.details}>\n                <CardContent className={classes.content}>\n                  <Typography component=\"h5\" variant=\"h5\">{props.title}</Typography>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">{props.year}</Typography>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.button}\n                    startIcon={<DeleteOutlineIcon />}\n                    onClick={() => removeNomination(context, bannerContext, props.imdb)}\n                  >\n                    REMOVE\n                  </Button>\n                </CardContent>\n              </div>\n              <CardMedia\n                className={classes.image}\n                image={props.poster}\n                title=\"Movie poster\"\n              />\n            </Card>\n          )}\n        </BannerContextConsumer>\n      )}\n    </NominationListContextConsumer>\n  );\n}\n\nexport default NomineeCard;","export default __webpack_public_path__ + \"static/media/sad.3963c84a.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { NominationListContextConsumer } from \"./NominationListContext\";\nimport NomineeCard from \"./NomineeCard\";\nimport SadOscar from \"./sad.png\";\nimport Typography from '@material-ui/core/Typography';\n\nconst Nominations = (props) => {\n\n  const useStyles = makeStyles(() => ({\n    card: {\n      padding: '10px 4px',\n      boxShadow: '2px 4px 6px 4px #ccc',\n    },\n    title: {\n      position: 'sticky',\n    },\n    nominations: {\n      height: '45vh',\n      overflow: 'scroll',\n    },\n    sadOscar: {\n      width: '32%',\n      minWidth: '20vh',\n      display: 'block',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '8%',\n    },\n    sadOscarText: {\n      textAlign: 'center',\n    }\n  }));\n\n  const classes = useStyles();\n\n  let nomsList = [];\n  const formatList = (ctxNoms) => {\n    nomsList = [];\n    for(let i=0; i < ctxNoms.length; i++) {\n      nomsList.push(JSON.parse(ctxNoms[i]));\n    }\n  }\n\n  return (\n    <NominationListContextConsumer>\n      {context => (\n        <Card className={classes.card}>\n          {formatList(context.nominationList)}\n          <CardHeader className={classes.title} title=\"Your Favourite Movies\" />\n          <CardContent>\n          <List className={classes.nominations}>\n              { // Conditional rendering based on if nominations exist\n                (context.nominationList.length === 0)\n                  ? <div>\n                      <img src={SadOscar} alt=\"sad oscar\" className={classes.sadOscar} />\n                      <div className={classes.sadOscarText}>\n                        <Typography component=\"h5\" variant=\"h5\">No nominations yet!</Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">Use the search bar to get started.</Typography>\n                      </div>\n                    </div>\n                  : nomsList.map((movie, index) => (\n                      <ListItem key={index} className={classes.result}>\n                        <NomineeCard key={index} imdb={movie.imdb} title={movie.title} year={movie.year} poster={movie.poster} />\n                      </ListItem>\n                    ))\n              }\n            </List>\n          </CardContent>\n        </Card>\n      )}\n    </NominationListContextConsumer>\n  );\n}\n\nexport default Nominations;","import React, { useReducer } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport SearchResults from \"./SearchResults\";\nimport Nominations from \"./Nominations\";\nimport { BannerContextConsumer } from \"./BannerContext\";\n\nconst initialState = {\n  movies: [],\n  errorMessage: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"REQ\":\n      return {\n        ...state,\n        errorMessage: null\n      };\n    case \"PASS\":\n      return {\n        ...state,\n        movies: action.payload,\n        errorMessage: null\n      };\n    case \"FAIL\":\n      return {\n        ...state,\n        movies: null,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { movies, errorMessage } = state;\n\n  const search = searchTerm => {\n    dispatch({\n      type: \"REQ\"\n    });\n\n    fetch(`https://www.omdbapi.com/?apikey=2259721&s=${searchTerm}&type=movie`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (jsonResponse.Response === \"True\") {\n          dispatch({\n              type: \"PASS\",\n              payload: jsonResponse.Search\n          });\n        } else {\n          dispatch({\n              type: \"FAIL\",\n              error: jsonResponse.Error\n          });\n        }\n      });\n  };\n\n  const useStyles = makeStyles(() => ({\n    root: {\n      backgroundColor: '#FCFCFC',\n    },\n    results: {\n      width: '90%',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',  \n    },\n    divider: {\n      height: '40vh',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <BannerContextConsumer>\n      {context => (\n        <div className={classes.root}>\n          <Header />\n          <Search search={search} />\n          {context.banners[0]\n            ? <Alert severity=\"success\">All done - you have favourited 5 movies!</Alert>\n            : null\n          }\n          {context.banners[1]\n            ? <Alert severity=\"error\">Hey - you already favourited 5 movies! Remove a nomination to keep going.</Alert>\n            : null\n          }\n          <div className={classes.divider}></div>\n          <div className={classes.results}>\n            <Grid container spacing={3}>\n              <Grid item xs={6} >\n                <SearchResults movies={movies} errorMessage={errorMessage} />\n              </Grid>\n              <Grid item xs={6}>\n                <Nominations />\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      )}\n    </BannerContextConsumer>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { NominationListContextProvider } from \"./components/NominationListContext\";\nimport { BannerContextProvider } from \"./components/BannerContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <NominationListContextProvider>\n      <BannerContextProvider>\n        <App />\n      </BannerContextProvider>\n    </NominationListContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}